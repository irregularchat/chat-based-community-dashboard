#.env-template
# Customization
PAGE_TITLE = "Site Title"
FAVICON_URL = https://filedn.com/lDsr08WnANmQTUJg2h6Jg2Q/Logos/Irregular%20Chat-Tech.png
# config
BASE_DOMAIN =domain.tld
PORT = 8501

# Authentik
Authentik_API_URL = https://sso.domain.tld/api/v3
# Secrets
# See documentation for user and api token https://docs.goauthentik.io/developer-docs/api/reference/core-users-create 
AUTHENTIK_API_TOKEN = your_api_token_here
#The group id you want to add default users to be in. Select group and see id in url.
MAIN_GROUP_ID = GROUP_ID
# authentik flow id. Export flow to see the id. 
FLOW_ID = FLOW_ID_HERE 
# authentik flow id. Export flow to see the id.
INVITE_FLOW_ID = INVITE_FLOW_ID_HERE 
# The label for the invite flow
INVITE_LABEL = INVITE_LABEL_HERE 

LOGIN_REQUIRED = False

# Authentik OpenID Connect (OIDC) Configuration
# The client ID for your OIDC application in Authentik
OIDC_CLIENT_ID = community_dashboard
# The client secret for your OIDC application in Authentik
OIDC_CLIENT_SECRET = your_client_secret_here
# The OIDC authorization endpoint
OIDC_AUTHORIZATION_ENDPOINT = https://sso.domain.tld/application/o/authorize/
# The OIDC token endpoint
OIDC_TOKEN_ENDPOINT = https://sso.domain.tld/application/o/token/
# The OIDC userinfo endpoint
OIDC_USERINFO_ENDPOINT = https://sso.domain.tld/application/o/userinfo/
# The OIDC end session endpoint
OIDC_END_SESSION_ENDPOINT = https://sso.domain.tld/application/o/end-session/
# The OIDC scopes to request (comma-separated)
OIDC_SCOPES = openid,profile,email
# The OIDC redirect URI for your application
OIDC_REDIRECT_URI = https://dashboard.domain.tld/auth/callback

# Admin configuration
# Comma-separated list of usernames that should have admin privileges
# Default admin user is 'adminuser' with password 'Admin_Password123!'
# IMPORTANT: Change this password after first login for security
ADMIN_USERNAMES = adminuser,admin1,admin2

# Default admin user credentials (used for first-time setup)
DEFAULT_ADMIN_USERNAME = adminuser
DEFAULT_ADMIN_PASSWORD = Admin_Password123!

# Local DB 
POSTGRES_PASSWORD =  password_for_db
POSTGRES_USER = dashboarduser
POSTGRES_DB = dashboarddb
# POSTGRES_PORT is used for external connections from the host machine
# In Docker, this is the external port mapping. Change this if 5436 conflicts with other services.
# Note: Inside Docker, PostgreSQL always uses port 5432 regardless of this setting.
POSTGRES_PORT = 5436 
# Internal Docker connection URL always uses port 5432
DATABASE_URL = postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}

# OPENAI API KEY used for gpt_call.py
OPENAI_ACTIVE = False
OPENAI_API_KEY = ""

# SMTP Email Server for sending emails
SMTP_ACTIVE = False
SMTP_SERVER = smtp.domain.com
SMTP_PORT = 587
SMTP_USER = username
SMTP_PASSWORD = password
SMTP_FROM = no-reply@domain.com
# The email address of the user who will be used to send the safety number change email
SMTP_BCC = email@domain.com

# List of Signal Groups that Users will be added to when they sign up based on their interest

# DISCOURSE API FOR POSTING TO DISCOURSE
DISCOURSE_ACTIVE = False
DISCOURSE_URL = https://discourse.domain.com/
DISCOURSE_API_KEY = your_api_key_here
DISCOURSE_API_USERNAME = your_username_here
DISCOURSE_CATEGORY_ID = 8
DISCOURSE_INTRO_TAG = "introductions"

## MATRIX ACCESS TOKEN FOR POSTING TO MATRIX using matrix-python-sdk
MATRIX_ACTIVE = False
MATRIX_URL = https://matrix.domain.com/
MATRIX_ACCESS_TOKEN = your_access_token_here
# Matrix room IDs for posting to specific rooms (format: !roomid:domain.com)
MATRIX_DEFAULT_ROOM_ID = !defaultroomid:domain.com
# Define multiple rooms if needed
MATRIX_WELCOME_ROOM_ID = !welcomeroom:domain.com
# Signal bridge bot command room ID - where you send commands to the Signal bridge bot
# This is NOT where you chat with Signal users, but where you send bot commands like "start-chat @signal_user"
# The bot will respond with the actual chat room ID for each Signal user
# Format: !roomid:domain.com (get this from your Signal bridge bot logs)
# Leave empty if you don't use Signal bridge integration
MATRIX_SIGNAL_BRIDGE_ROOM_ID = !signalbridgeroom:domain.com

# Matrix encryption is disabled for simplicity
# Message history is not available, but sending messages works
# Matrix rooms configuration (format: name|category|room_id on separate lines or separated by semicolons)
# MATRIX_ROOM_IDS_NAME_CATEGORY = Room Name|Room Category1, Room Category2, Room Category5|!roomid:domain.com;Room Name|Room Category1, Room Category3|!roomid:domain.com;Room Name|Room Category|!roomid:domain.com;Room Name|Room Category|!roomid:domain.com;Room Name|Room Category|!roomid:domain.com
# Matrix bot/service account details
MATRIX_BOT_USERNAME = @botname:domain.com
MATRIX_BOT_DISPLAY_NAME = "Service Bot"

# Matrix cache configuration
# Minimum number of members a room must have to be synced (default: 5)
# Rooms with fewer members will be skipped during sync to improve performance
MATRIX_MIN_ROOM_MEMBERS = 5

MATRIX_MESSAGE_NOTICE="NOREPLY: This message was sent from the admin dashboard"


# Recommendation keyword expansions (this should be moved to a Python config file)
# recommendation_keyword_expansions = {
#     "outdoor": ["nature", "hiking", "camping", "adventure", "outdoors", "trek", "wilderness", 
#                 "outside", "backpacking", "mountain", "climbing", "trail", "hiking", "biking", 
#                 "fishing", "kayaking", "canoeing", "rafting", "skiing", "snowboarding", "shooting", "guns", "firearms", "firearm", "firearm safety", "firearm training", "firearm safety training", "firearm training", "firearm safety training"],
#     "computer": ["tech", "technology", "programming", "coding", "software", "development", "hardware", "raspberry pi", "home server", "home lab", "home automation", "home assistant"],
#     "hack": ["security", "cybersecurity", "penetration", "pentest", "exploit", "vulnerability", "Brighton", "Cyber", "red team", "blue team", "purple team", "redteaming", "blue teaming", "purple teaming", "red teaming", "blue teaming", "purple teaming"],
#     "network": ["networking", "infrastructure", "system", "admin", "administration", "net+", "self-hosting", "self hosting", "self-host", "self-hosting", "self hosting", "self-host", "self-hosting", "Brighton"],
#     "IWAR": ["Influence", "PSYOP", "PSY-B", "4th"]
# }

# NextAuth.js Configuration (for modern stack)
# Generate a random secret with: openssl rand -base64 32
NEXTAUTH_SECRET = your_nextauth_secret_here_generate_with_openssl_rand_base64_32
NEXTAUTH_URL = http://localhost:8504

# Modern Stack Authentication Configuration
# These replace the OIDC_ prefixed variables above for the new Next.js app
AUTHENTIK_CLIENT_ID = community_dashboard
AUTHENTIK_CLIENT_SECRET = your_client_secret_here
AUTHENTIK_ISSUER = https://sso.domain.tld/application/o/community_dashboard
AUTHENTIK_REDIRECT_URI = http://localhost:8504/api/auth/callback/authentik

# Modern Stack Email Configuration (maps to SMTP variables)
SMTP_HOST = smtp.domain.com
SMTP_PORT = 587
SMTP_USER = username
SMTP_PASS = password
SMTP_FROM = no-reply@domain.com

# Modern Stack Matrix Configuration (maps to existing Matrix variables)
MATRIX_HOMESERVER = https://matrix.domain.com/
MATRIX_ACCESS_TOKEN = your_access_token_here
MATRIX_USER_ID = @botname:domain.com
